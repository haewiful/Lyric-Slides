name: Build Executable

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    id: build_job
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt


      - name: Install PyInstaller
        run: python -m pip install --upgrade pip pyinstaller

      - name: Build executable
        run: |
          pyinstaller --onefile lyrics.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: executable-${{ runner.os }}
          path: dist/

      # - name: Create GitHub Release Tag
      #   run: |
      #     VERSION_TAG=v1.${{ github.run_number }}
      #     git tag $VERSION_TAG
      #     git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }} $TAG_NAME
      
      # - name: Create GitHub Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     files: dist/executable-${{ runner.os }}  # Path to the file you want to attach to the release
      #     tag_name: v1.${{ github.run_number }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # This automatically has access to your repo's token
    release:
      needs: build
      runs-on: ubuntu-latest
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      permissions:
        contents: write
      
      steps:
        - name: Download all build artifacts
          uses: actions/download-artifact@v4
        
        - name: List downloaded files
          uses: ls -R
        
        - name: Create release
          uses: softprops/action-gh-release@v2
          with:
            files: |
              executable-ubuntu-latest/lyrics.py
              executable-macos-latest/lyrics.py
              executable-windows-latest/lyrics.py
            generate_release_notes: true
            draft: false
            prerelease: false
          
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

